type Query {
  loggedInUser: User
  user(id: ID!): User
  users: [User]!
  routine(id: ID!): Routine
  routines(id: ID!): [Routine]
}

type Mutation {
  signup(username: String!, password: String!): AuthPayload
  login(username: String!, password: String!): AuthPayload
  createRoutine(name: String!): Routine
  testCreateRoutine: Routine
  deleteRoutine(routineId: String!): Routine
  updateRoutine(name: String!, routineId: String!): Routine
  updateDay(dayId: String!, isCompleted: Boolean): Day
}

type User {
  id: ID!
  username: String!
  routines: [Routine]!
}

type Day {
  id: ID!
  date: String!
  isCompleted: Boolean!
  partOf: Routine!
}

type Routine {
  id: ID!
  name: String!
  ownedBy: User!
  days: [Day]!
}

type AuthPayload {
  token: String!
  user: User!
}
